/* tslint:disable */
/* eslint-disable */
/**
 * To-Do List API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BodyUpdateCompletedStatusTodosTodoIdPatch,
  HTTPValidationError,
  TodoCreate,
  TodoOut,
} from '../models/index';
import {
    BodyUpdateCompletedStatusTodosTodoIdPatchFromJSON,
    BodyUpdateCompletedStatusTodosTodoIdPatchToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    TodoCreateFromJSON,
    TodoCreateToJSON,
    TodoOutFromJSON,
    TodoOutToJSON,
} from '../models/index';

export interface CreateTodoTodosPostRequest {
    todoCreate: TodoCreate;
}

export interface DeleteTodoTodosTodoIdDeleteRequest {
    todoId: number;
}

export interface UpdateCompletedStatusTodosTodoIdPatchRequest {
    todoId: number;
    bodyUpdateCompletedStatusTodosTodoIdPatch: BodyUpdateCompletedStatusTodosTodoIdPatch;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Create Todo
     */
    async createTodoTodosPostRaw(requestParameters: CreateTodoTodosPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodoOut>> {
        if (requestParameters['todoCreate'] == null) {
            throw new runtime.RequiredError(
                'todoCreate',
                'Required parameter "todoCreate" was null or undefined when calling createTodoTodosPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/todos`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TodoCreateToJSON(requestParameters['todoCreate']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodoOutFromJSON(jsonValue));
    }

    /**
     * Create Todo
     */
    async createTodoTodosPost(requestParameters: CreateTodoTodosPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodoOut> {
        const response = await this.createTodoTodosPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete Todo
     */
    async deleteTodoTodosTodoIdDeleteRaw(requestParameters: DeleteTodoTodosTodoIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['todoId'] == null) {
            throw new runtime.RequiredError(
                'todoId',
                'Required parameter "todoId" was null or undefined when calling deleteTodoTodosTodoIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos/{todo_id}`.replace(`{${"todo_id"}}`, encodeURIComponent(String(requestParameters['todoId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete Todo
     */
    async deleteTodoTodosTodoIdDelete(requestParameters: DeleteTodoTodosTodoIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteTodoTodosTodoIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Get Todos
     */
    async getTodosTodosGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TodoOut>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TodoOutFromJSON));
    }

    /**
     * Get Todos
     */
    async getTodosTodosGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TodoOut>> {
        const response = await this.getTodosTodosGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Update Completed Status
     */
    async updateCompletedStatusTodosTodoIdPatchRaw(requestParameters: UpdateCompletedStatusTodosTodoIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodoOut>> {
        if (requestParameters['todoId'] == null) {
            throw new runtime.RequiredError(
                'todoId',
                'Required parameter "todoId" was null or undefined when calling updateCompletedStatusTodosTodoIdPatch().'
            );
        }

        if (requestParameters['bodyUpdateCompletedStatusTodosTodoIdPatch'] == null) {
            throw new runtime.RequiredError(
                'bodyUpdateCompletedStatusTodosTodoIdPatch',
                'Required parameter "bodyUpdateCompletedStatusTodosTodoIdPatch" was null or undefined when calling updateCompletedStatusTodosTodoIdPatch().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/todos/{todo_id}`.replace(`{${"todo_id"}}`, encodeURIComponent(String(requestParameters['todoId']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: BodyUpdateCompletedStatusTodosTodoIdPatchToJSON(requestParameters['bodyUpdateCompletedStatusTodosTodoIdPatch']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodoOutFromJSON(jsonValue));
    }

    /**
     * Update Completed Status
     */
    async updateCompletedStatusTodosTodoIdPatch(requestParameters: UpdateCompletedStatusTodosTodoIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodoOut> {
        const response = await this.updateCompletedStatusTodosTodoIdPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
